---
- hosts: theaterwecker
  become: true
  vars_files:
    - secrets.yml

  tasks:
  - name: add debian docker repository
    apt_repository: repo='deb http://deb.goaccess.io/ xenial main' state=present filename=goaccess.list

  - name: add goaccess repo key
    apt_key: url=https://deb.goaccess.io/gnugpg.key state=present

  - name: update packages cache
    apt: update_cache=yes cache_valid_time=3600
    tags:
      - setup

  - name: install packages
    apt: name={{ item.name }}
    with_items:
      - { name: 'nginx' }
      - { name: 'python-psycopg2' }
      - { name: 'python3-dev' }
      - { name: 'goaccess-tcb' }
      - { name: 'apt-transport-https' }
      - { name: 'redis-server' }
    tags:
      - setup

  - name: enable and start redis
    service: name=redis-server enabled=yes state=started
    tags:
      - setup

  - name: create database
    postgresql_db: name=theaterwecker
                 encoding='UTF-8'
                 lc_collate='de_DE.UTF-8'
                 lc_ctype='de_DE.UTF-8'
                 template='template0'
    become: true
    become_user: postgres
    tags:
      - setup

  - name: create database user
    postgresql_user: db=theaterwecker name=theaterwecker password={{postgres_password}} priv=ALL
    become: true
    become_user: postgres
    tags:
      - setup

  - name: create nginx config for update page
    template: src=update.conf.j2 dest=/etc/nginx/sites-available/update.conf
    notify:
      - reload nginx
    tags:
      - setup
      - deployment

  - name: create nginx config for theaterwecker
    template: src=theaterwecker.conf.j2 dest=/etc/nginx/sites-available/theaterwecker.conf
    notify:
      - reload nginx
    tags:
      - setup
      - deployment

  - name: create run directory for gunicorn
    file: path=/var/run/theaterwecker owner=www-data group=www-data  state=directory
    tags:
      - setup

  - name: checkout files
    git: repo=https://github.com/codeforchemnitz/theaterwecker.git dest=/var/theaterwecker version=master
    notify:
      - run update.sh
    tags:
      - deployment

  - name: create virtualenv
    command: virtualenv /var/theaterwecker-venv -p python3 creates=/var/theaterwecker-venv
    tags:
      - setup

  - name: install gunicorn into virtualenv
    pip:
      name: gunicorn
      virtualenv_python: python3.5
      executable: /var/theaterwecker-venv/bin/pip
    tags:
      - setup

  - name: install requirements into virtualenv
    pip:
      requirements: /var/theaterwecker/requirements.txt
      virtualenv_python: python3.5
      executable: /var/theaterwecker-venv/bin/pip
    tags:
      - setup

  - name: create gunicorn config for theaterwecker
    template: src=theaterwecker-web.service.j2 dest=/etc/systemd/system/theaterwecker-web.service
    notify:
      - systemctl daemon-reload
      - restart theaterwecker-web
    tags:
      - setup
      - deployment

  - name: enable theaterwecker-web
    service: name=theaterwecker-web enabled=yes
    tags:
      - setup

  - name: create worker service config for theaterwecker
    template: src=theaterwecker-worker.service.j2 dest=/etc/systemd/system/theaterwecker-worker.service
    notify:
      - systemctl daemon-reload
      - restart theaterwecker-worker
    tags:
      - setup
      - deployment

  - name: enable theaterwecker-worker
    service: name=theaterwecker-worker enabled=yes
    tags:
      - setup

  - name: create log dir for theaterwecker-worker
    file: path=/var/log/theaterwecker state=directory owner=www-data group=www-data
    tags:
      - setup

  - name: create beat service config for theaterwecker
    template: src=theaterwecker-beat.service.j2 dest=/etc/systemd/system/theaterwecker-beat.service
    notify:
      - systemctl daemon-reload
      - restart theaterwecker-beat
    tags:
      - setup
      - deployment

  - name: enable theaterwecker-beat
    service: name=theaterwecker-beat enabled=yes
    tags:
      - setup

  - name: place settings_prod.py
    template: src=settings_prod.py.j2 dest=/var/theaterwecker/django/theaterwecker/settings_prod.py
    notify:
      - restart theaterwecker-web
    tags:
      - deployment

  - name: create static directory for collectstatic
    file: path=/var/theaterwecker/django/static owner=www-data group=www-data state=directory
    tags:
      - setup

  - name: create results directory for goaccess
    file: path=/var/www/report state=directory
    tags:
      - setup

  - name: add goaccess config
    template: src=goaccess.conf dest=/etc/goaccess.conf

  - name: add parse access log script
    template: src=parse_access_log.sh dest=/opt/parse_access_log.sh mode="u=rwx,g=rx,o=rx"

  - name: add goaccess cronjob
    cron: name="create goaccess result" job="/opt/parse_access_log.sh"

  handlers:
    - name: systemctl daemon-reload
      command: systemctl daemon-reload
    - name: reload nginx
      service: name=nginx state=reloaded
    - name: restart theaterwecker-web
      service: name=theaterwecker-web state=restarted
    - name: restart theaterwecker-worker
      service: name=theaterwecker-worker state=restarted
    - name: restart theaterwecker-beat
      service: name=theaterwecker-beat state=restarted
    - name: run update.sh
      shell: /var/theaterwecker/update.sh
